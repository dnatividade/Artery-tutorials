//
// Generated file, do not edit! Created by nedtool 5.7 from /home/veins/artery/extern/inet/src/inet/networklayer/ipv4/ipsec/IPsecAuthenticationHeader.msg.
//

#ifndef __INET__IPSEC_IPSECAUTHENTICATIONHEADER_M_H
#define __INET__IPSEC_IPSECAUTHENTICATIONHEADER_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0507
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif


namespace inet {
namespace ipsec {

// cplusplus {{
const int IP_AH_HEADER_BYTES = 24;  // IPsec AH header length (variable-length ICV field not included)
// }}

/**
 * Class generated from <tt>/home/veins/artery/extern/inet/src/inet/networklayer/ipv4/ipsec/IPsecAuthenticationHeader.msg:28</tt> by nedtool.
 * <pre>
 * //
 * // IPsec AH header (RFC 4302).
 * //
 * packet IPsecAuthenticationHeader
 * {
 *     uint8_t nextHeader; // IP Protocol number defined by IANA (4 = IPv4; 41 = IPv6; 6 = TCP)
 *     uint32_t spi; // security parameters index
 *     uint32_t sequenceNumber;
 * }
 * </pre>
 */
class IPsecAuthenticationHeader : public ::omnetpp::cPacket
{
  protected:
    uint8_t nextHeader;
    uint32_t spi;
    uint32_t sequenceNumber;

  private:
    void copy(const IPsecAuthenticationHeader& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const IPsecAuthenticationHeader&);

  public:
    IPsecAuthenticationHeader(const char *name=nullptr, short kind=0);
    IPsecAuthenticationHeader(const IPsecAuthenticationHeader& other);
    virtual ~IPsecAuthenticationHeader();
    IPsecAuthenticationHeader& operator=(const IPsecAuthenticationHeader& other);
    virtual IPsecAuthenticationHeader *dup() const override {return new IPsecAuthenticationHeader(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual uint8_t getNextHeader() const;
    virtual void setNextHeader(uint8_t nextHeader);
    virtual uint32_t getSpi() const;
    virtual void setSpi(uint32_t spi);
    virtual uint32_t getSequenceNumber() const;
    virtual void setSequenceNumber(uint32_t sequenceNumber);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const IPsecAuthenticationHeader& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, IPsecAuthenticationHeader& obj) {obj.parsimUnpack(b);}

} // namespace ipsec
} // namespace inet

#endif // ifndef __INET__IPSEC_IPSECAUTHENTICATIONHEADER_M_H

