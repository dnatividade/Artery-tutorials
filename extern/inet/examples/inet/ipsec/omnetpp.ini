[General]
network = TwoHosts

# NIC configuration
**.ppp[*].queueType = "DropTailQueue" # in routers
**.ppp[*].queue.frameCapacity = 10  # in routers

*.configurator.config=xml("<config><interface hosts='*' address='192.168.1.x' netmask='255.255.255.0'/></config>")

**.client*.**.hasIpsec = true
**.server.**.hasIpsec = true
**.client1.**spdConfig = xmldoc("ipsecConfig.xml", "ipsecConfig/Devices/Device[@id='client1']/")
**.server.**spdConfig = xmldoc("ipsecConfig.xml", "ipsecConfig/Devices/Device[@id='server']/")

**.ipsec.ahProtectOutDelay = 7us
**.ipsec.ahProtectInDelay  = 9us

**.ipsec.espProtectOutDelay = 7us
**.ipsec.espProtectInDelay  = 9us

[Config TCPTraffic]
description = "IPsec with TCP traffic"
sim-time-limit = 200s
fingerprint = "398a-cb61/tplx"

# Three streams:
#  tcpApp[0]: 1000->2000 TCP/UDP: ESP
#  tcpApp[1]: 1001->2001 TCP/UDP: BYPASS
#  tcpApp[2]: 1002->2002 TCP/UDP: not in IPsec
# 
**.numTcpApps = 3
**.client*.tcpApp[*].typename = "TCPSessionApp"
**.client*.tcpApp[*].active = true
**.client*.tcpApp[0].localPort = 1000
**.client*.tcpApp[1].localPort = 1001
**.client*.tcpApp[2].localPort = 1002
**.client*.tcpApp[*].connectAddress = "server"
**.client*.tcpApp[0].connectPort = 2000
**.client*.tcpApp[1].connectPort = 2001
**.client*.tcpApp[2].connectPort = 2002
**.client*.tcpApp[*].tOpen = 0.2s
**.client*.tcpApp[*].tSend = 0.4s
**.client*.tcpApp[*].sendBytes = 1000000B
**.client*.tcpApp[*].sendScript = ""
**.client*.tcpApp[*].tClose = 25s

**.server*.tcpApp[*].typename = "TCPEchoApp"
**.server*.tcpApp[0].localPort = 2000
**.server*.tcpApp[1].localPort = 2001
**.server*.tcpApp[2].localPort = 2002
**.server*.tcpApp[0].echoFactor = 2.0
**.server*.tcpApp[0].echoDelay = 0s

[Config UDPTraffic]
description = "IPsec with UDP traffic"
sim-time-limit = 200s
fingerprint = "0f52-0964/tplx"

# Three streams:
#  udpApp[0]: 1000->2000 TCP/UDP: ESP
#  udpApp[1]: 1001->2001 TCP/UDP: BYPASS
#  udpApp[2]: 1002->2002 TCP/UDP: not in IPsec
# 
**.numUdpApps = 3
**.client*.udpApp[*].typename = "UDPBasicApp"
**.client*.udpApp[0].localPort = 1000
**.client*.udpApp[1].localPort = 1001
**.client*.udpApp[2].localPort = 1002
**.client*.udpApp[*].destAddresses = "server"
**.client*.udpApp[0].destPort = 2000
**.client*.udpApp[1].destPort = 2001
**.client*.udpApp[2].destPort = 2002
**.client*.udpApp[*].startTime = 1s
**.client*.udpApp[*].stopTime = 5s
**.client*.udpApp[*].sendInterval = 0.1s
**.client*.udpApp[*].messageLength = 1024B

**.server*.udpApp[*].typename = "UDPSink"
**.server*.udpApp[0].localPort = 2000
**.server*.udpApp[1].localPort = 2001
**.server*.udpApp[2].localPort = 2002


[Config Multicast]
extends = UDPTraffic
description = "IPsec with multicast traffic (just BYPASS'd)"
sim-time-limit = 200s
fingerprint = "55a5-d28b/tplx"

# place host interfaces into a multicast group
*.configurator.config = xml("<config> <interface hosts='*' address='192.168.1.x' netmask='255.255.255.0'/> <multicast-group hosts='client* server*' interfaces='ppp*' address='224.0.0.1'/> </config>")
**.multicastForwarding = true

# add an extra UDP app that generates multicast traffic
**.numUdpApps = 1
**.client*.udpApp[0].destAddresses = "224.0.0.1"
**.client*.udpApp[0].destPort = 2100
**.server*.udpApp[0].localPort = 2100

